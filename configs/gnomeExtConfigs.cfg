# https://itsfoss.com/gnome-shell-extensions/
# https://linuxconfig.org/how-to-install-gnome-shell-extensions-from-zip-file-using-command-line-on-ubuntu-18-04-bionic-beaver-linux

localGnomeExtLocation=~/.local/share/gnome-shell/extensions/

# Gets info about the file
function getFileInfo()
{
    # Repo name including the .git part if a git URL
    fullFilename=$(basename $url)

    # JUST the file name
    fileName=$( echo $fullFilename | cut -d. -f1)

    extension=$( echo $fullFilename | cut -d. -f2)
}

gitGnomeExt_restartMessage()
{
    clear
    echo -e "For this to take effect please either:"
    echo
    echo -e "logout and log back in"
    echo -e "OR press ALT+F2... then type 'r' and hit enter"
    echo
    echo -e "if you do the second option, things may seem frozen for a few moments and you will see a box with 'restarting' on your screen"
    echo -e "This pause/freeze is NORMAL "

    userPrompt
}

gitGnomeExt_makeInstall()
{
    cd ~/Downloads

    getFileInfo $url

    git clone $url

    cd $fileName

    make install

    gitGnomeExt_restartMessage

}

## By the end of this the file is only downloaded
function getExtension()
{
    getFileInfo

    #change pwd
    cd ~/Downloads

    if [ "$extension" == "git" ]; then

        # the fileName var is the same as the name of the output Dir for the record
        if [ ! -d "$fileName" ]; then
            git clone $url
        else
            echo -e "Directory already exists"
        fi

            # cd into directory
            cd $fileName

            uuid=$(find . -type f -name "metadata.json" -exec cat {} + | grep -m1 -i uuid | cut -d: -f2 | sed 's/ //g;s/"//g;s/,//g')

            extensionName=$(find . -type f -name "metadata.json" -exec cat {} + | grep -m1 -i name | cut -d: -f2 | sed 's/ //g;s/"//g;s/,//g')

            extractionLocation=$localGnomeExtLocation$uuid

            clear
            echo -e "Manually Installing $extensionName"


            # Note to self: we are IN the ext directory here ... .in the Downloads folder

            if [ ! -d $extractionLocation ]; then

                # makes directory in proper location
                echo -e "Creating needed directory: $extractionLocation"
                mkdir -p $extractionLocation


                echo -e "Copying Extension to Home folder location"
                cp -r $uuid $localGnomeExtLocation
                userPrompt

                gitGnomeExt_restartMessage

            else
                echo -e "$extractionLocation already exists"
                userPrompt

            fi

            echo -e "You can type Alt+F2 then type R (and press enter) and the extension should be there now"
            userPrompt


    elif [ "$extension" == "zip" ]; then
        wget $url
    fi

}


##########################################################################

function gnomeShellExt_soundInputOutputChooser()
{
    url="https://github.com/kgshank/gse-sound-output-device-chooser.git"

    getExtension $url
}


function gnomeShellExt_nightLightSlider()
{
    url="https://github.com/kiyui/gnome-shell-night-light-slider-extension.git"

    getExtension $url

    # Fix for missing file issue
    glib-compile-schemas $extractionLocation/schemas


}

function gnomeShellExt_impatience()
{
    url="https://github.com/timbertson/gnome-shell-impatience.git"

    getExtension $url
}

function gnomeShellExt_transparentWindowMoving()
{
    url="https://github.com/Noobsai/transparent-window-moving.git"
    gitGnomeExt_makeInstall $url
}


function gnomeShellExt_smartTransparentTopBar()
{
    url="https://github.com/aunetx/gnome-shell-extension-transparent-top-bar"
    gitGnomeExt_makeInstall $url
}